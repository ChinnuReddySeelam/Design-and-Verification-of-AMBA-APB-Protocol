module amba_apb_master_tb;
  
  reg clk;
  reg reset;
  reg [31:0] address;
  reg [31:0] write_data;
  reg write_enable;
  reg read_enable;
  wire [31:0] read_data;
  
  // Instantiate the AMBA APB master module
  amba_apb_master dut (
    .clk(clk),
    .reset(reset),
    .address(address),
    .write_data(write_data),
    .write_enable(write_enable),
    .read_enable(read_enable),
    .read_data(read_data)
  );
  
  // Clock generation
  always #5 clk = ~clk;
  
  // Testbench stimulus
  initial begin
    clk = 0;
    reset = 1;
    address = 32'h00000000;
    write_data = 32'h12345678;
    write_enable = 0;
    read_enable = 0;
    
    // Reset initialization
    #10 reset = 0;
    
    // Perform write transaction
    #10 address = 32'h00000100;
    write_enable = 1;
    #10 write_enable = 0;
    
    // Perform read transaction
    #10 address = 32'h00000100;
    read_enable = 1;
    #10 read_enable = 0;
    
    // Add additional test scenarios as needed
    
    // End simulation
    #10 $finish;
  end
  
  // Monitor for displaying read data
  always @(posedge clk) begin
    $display("Read Data: %h", read_data);
  end
  
endmodule
